#!/usr/bin/env bash

echo "If you're trying to use this script, please talk with infra team so we can understand the use case" >&2
exit 1

#TODO: enforce parameters for switching modes

BUILD_DIR=$PWD

PLAY_FILE=$1

# We specified a release zip
if [[ -n $PLAY_FILE && -f $PLAY_FILE ]]; then
  mkdir -p unzipped/
  unzip $PLAY_FILE -d unzipped/

  PLAY_BUILD_DIR=$(find . -name 'framework' -type d | sed 's/framework//')
 
  VERSION=`basename $PLAY_FILE .zip | awk -F'-' '{print $2}'`

# Build Play! framework
else
  PLAY_BUILD_DIR=~/release/play
  PLAY_BRANCH=1.2.x
  PLAY_TAG=HEAD

  VERSION=$PLAY_BRANCH

  cd $PLAY_BUILD_DIR
  if [ "$PLAY_TAG" == "HEAD" ]; then
    git checkout $PLAY_BRANCH
    /usr/bin/ant -buildfile $PLAY_BUILD_DIR/framework/build.xml
  else
    git checkout $PLAY_TAG
    /usr/bin/ant -buildfile $PLAY_BUILD_DIR/framework/build.xml -Dversion=$PLAY_TAG
  fi

  git checkout $PLAY_BRANCH
fi


# Clean old tarball
cd $BUILD_DIR
rm -fr build/play-heroku.tar.gz

# Create tmp space for tar'ing
mkdir -p tmp/.play/framework/src/play

# Add Play! framework
cp -R $PLAY_BUILD_DIR/framework/dependencies.yml tmp/.play/framework
cp -R $PLAY_BUILD_DIR/framework/lib              tmp/.play/framework
cp -R $PLAY_BUILD_DIR/framework/play-*.jar       tmp/.play/framework
cp -R $PLAY_BUILD_DIR/framework/pym              tmp/.play/framework
cp -R $PLAY_BUILD_DIR/framework/src/play/version tmp/.play/framework/src/play
cp -R $PLAY_BUILD_DIR/framework/templates        tmp/.play/framework

# Add Play! core modules
cp -R $PLAY_BUILD_DIR/modules    tmp/.play

# Add Play! Linux executable
cp -R $PLAY_BUILD_DIR/play  tmp/.play

# Add Resources
cp -R $PLAY_BUILD_DIR/resources tmp/.play

# Run tar and remove tmp space
if [ ! -d build ]; then
  mkdir build
fi

TARGET=play-heroku-$VERSION.tar.gz
tar cvzf build/$TARGET -C tmp/ .play
rm -fr tmp/

if [[ -n $PLAY_FILE && -f $PLAY_FILE ]]; then
  rm -fr unzipped/
  echo "*** BUILT FROM ZIP FILE: $PLAY_FILE"
else
  echo "*** BUILT FROM BRANCH $PLAY_BRANCH AT TAG $PLAY_TAG"
fi


function ask_yes_or_no() {
    read -p "$1 ([y]es or [N]o): "
    case $(echo $REPLY | tr '[A-Z]' '[a-z]') in
        y|yes) echo "yes" ;;
        *)     echo "no" ;;
    esac
}

if [[ "no" == $(ask_yes_or_no "Heroku distribution build complete. Do you want to push to S3?") ]]
then
  echo "Ok, not pushing"
  exit 0
fi

echo "Ok, publishing to S3..."
aws s3 cp build/$TARGET s3://lendup.packages/play/$TARGET --acl public-read
echo "Published."
